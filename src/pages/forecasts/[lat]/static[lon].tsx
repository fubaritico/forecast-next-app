import Head from 'next/head'
import type {
  GetStaticProps,
  GetStaticPropsContext,
  InferGetStaticPropsType,
} from 'next'
import type { ReactElement } from 'react'
import { getCurrentDefaultObservations } from '@Requests/getCurrentDefaultObservations'
import MainLayout from '@Layouts/MainLayout'
import Grid from '@Components/Grid/Grid'
import ClickableCard from '@Components/ClickableCard/ClickableCard'
import GoogleMapsWrapper from '@Components/GoogleMaps/GoogleMapsWrapper'
import Map from '@Components/GoogleMaps/Map'

type ForeCastsProps = {
  forecasts: GetCurrentDefaultObservationsAxiosResponse // For now will display 8 selected observations, not forecasts for a place
}
export async function getStaticPaths() {
  const params: Coordinates[] = [
    {
      lat: '36',
      lon: '46',
    },
    {
      lat: '48',
      lon: '57',
    },
  ]

  return {
    paths: params.map(({ lat, lon }) => ({
      params: {
        lat,
        lon,
      },
    })),
    fallback: false,
  }
}
/**
 * Instead of fetching your `/api` route you can call the same
 * function directly in `getStaticProps`
 * @param context
 */
export const getStaticProps: GetStaticProps = async (
  context: GetStaticPropsContext
) => {
  const response = await getCurrentDefaultObservations(
    context.params as unknown as Coordinates
  )
  const forecasts = response.data

  return {
    props: {
      forecasts,
    },
  }
}

const StaticForeCasts: NextPageWithLayout<ForeCastsProps> = ({
  forecasts,
}: InferGetStaticPropsType<typeof getStaticProps>) => (
  <>
    <Head>
      <title>Forecasts - Generated page with no Google Map</title>
      <meta name="description" content="Generated by create next app" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <div>Generated page with no Google Map</div>
    <GoogleMapsWrapper
      apiKey={process.env.NEXT_PUBLIC_GOOGLE_MAP_API_KEY as string}
    >
      <Map />
    </GoogleMapsWrapper>
    <Grid>
      {forecasts.map((f: MappedObservation) => (
        <ClickableCard
          key={f.cityName}
          href={`/forecasts/${f.coordinates?.lat}/${f.coordinates?.lon}`}
          title={f.cityName}
          description={f.weatherDescription}
          isExternalLink
        />
      ))}
    </Grid>
  </>
)

export default StaticForeCasts

StaticForeCasts.getLayout = (page: ReactElement) => (
  <MainLayout>{page}</MainLayout>
)
